package main

import (
	"L2_azat/patterns/visitor/shapes"
)

/*
Посетитель — это поведенческий паттерн проектирования, который позволяет добавлять в программу новые операции,
не изменяя классы объектов, над которыми эти операции могут выполняться.
Паттерн предлагает разместить новое поведение в отдельном классе, вместо того чтобы множить его сразу в нескольких классах

Методов у класса посетителя может быть несколько, индивидуально для каждого типа принимаемого в параметрах

Преимущества:
	1) Упрощает добавление операций, работающих со сложными структурами объектов.
	2) Объединяет родственные операции в одном классе.
	3) Посетитель может накапливать состояние при обходе структуры элементов.

Недостатки:
	1) Паттерн не оправдан, если иерархия элементов часто меняется.
	2) Может привести к нарушению инкапсуляции элементов.

Сценарии применимости:
	1) Когда нужно применить операцию над всеми элементами сложной структуры объектов (дерево, граф), при этом объекты
	реализуют какое-то общее поведение, но относятся к разным классам. При этом нет вариантов изменить код классов этих объектов.
	Например, если необходимо организовать экспорт различных объектов в форматы xml, docx, xlsx и тп. "Засорят" классы этих объектов
	нежелательно и их может быть очень много.
	Поведение так же можно задать только для определенных объектов иерархии
*/

func main() {
	// Создание объектов, поведение для которых выносится в отдельный класс посетителя
	// Расчёт площади для всех фигур в условном рабочем пространстве
	var myGeometryDrawings []shapes.Shape = []shapes.Shape{
		&shapes.Circle{Radius: 1}, // все объекты не имеют функциональности расчёта площади
		&shapes.Rectangle{L: 1, B: 1},
		&shapes.Square{A: 1},
		&shapes.Square{A: 50},
		&shapes.Circle{Radius: 4},
		&shapes.Rectangle{L: 7, B: 4},
		&shapes.Circle{Radius: 10},
	}

	// areaCalculator - посетитель содержащий поведение для расчёта площади
	areaCalculator := &AreaCalculator{}

	// Расчет площади для всех объектов в контейнере
	for _, figure := range myGeometryDrawings {
		// вызывается посетитель для объекта
		figure.Accept(areaCalculator)
	}
}
